name: ci

on: [push, pull_request]

jobs:

  build:

    runs-on: ubuntu-20.04
    env:
      ENVIRONMENT: ci
      NAMESPACE: ci
      WEB_PORT: 5000
      WEB_SECURE_PORT: 8443
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: 12345
      MYSQL_DATABASE: devopsloft
      MYSQL_ROOT_HOST: "%"
      VAULT_PORT: 8200
      STATCODES: "{'dev':{'project':11982518,'security':'4a57586a'},'prod':{'project':11982438,'security':'03b2cd4a'},'stage':{'project':11982511,'security':'e75b27f8'},'ci':{'project':11982909,'security':'f028aa60'}}"
      APP_PORT: 3000
      APP: devopsloft
      DOCKERHUB_DB: mysql
      MYSQL_PORT: 3306
      VAULT_ADDR: http://localhost:8200

    steps:
    - uses: actions/checkout@v2

    - name: Spin Environment
      run: |
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout devopsloft/web/localhost.key -out devopsloft/web/localhost.crt -subj "/C=IL/ST=Gush-Dan/L=Tel-Aviv/O=DevOps Loft/OU='dev'/CN='devopsloft'"
        env > .env.ci
        docker build --build-arg ENVIRONMENT=$ENVIRONMENT -t ${NAMESPACE}/spinner .
        docker-compose --env-file .env.$ENVIRONMENT build
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock ${NAMESPACE}/spinner:latest
  
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        pip3 install -r tests/requirements-test.txt
        wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
        mkdir geckodriver
        tar -xzf geckodriver-v0.26.0-linux64.tar.gz -C geckodriver
    
    - name: Tests
      run: |
        tests/basic_http_get_test.py
        tests/wait_mysql_up.sh
        tests/is_table_empty.py
    
    - name: Run selenium tests
      run: |
        tests/navbar.py

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
